<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chexin.simple.development.demo.mapper.CollectionRecordDoMapper">
  <resultMap id="BaseResultMap" type="com.chexin.simple.development.demo.model.CollectionRecordDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="modifier_id" jdbcType="INTEGER" property="modifierId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="status_name" jdbcType="VARCHAR" property="statusName" />
    <result column="record" jdbcType="VARCHAR" property="record" />
    <result column="repayment_date" jdbcType="VARCHAR" property="repaymentDate" />
    <result column="repayment_period" jdbcType="VARCHAR" property="repaymentPeriod" />
    <result column="record_name" jdbcType="VARCHAR" property="recordName" />
    <result column="record_phone" jdbcType="VARCHAR" property="recordPhone" />
    <result column="record_relation" jdbcType="VARCHAR" property="recordRelation" />
    <result column="record_relation_name" jdbcType="VARCHAR" property="recordRelationName" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="electric_man_id" jdbcType="BIGINT" property="electricManId" />
    <result column="electric_man_name" jdbcType="VARCHAR" property="electricManName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, creator, creator_id, modify_time, modifier, modifier_id, customer_name, 
    phone, `status`, status_name, record, repayment_date, repayment_period, record_name, 
    record_phone, record_relation, record_relation_name, order_number, electric_man_id, 
    electric_man_name
  </sql>
  <select id="selectByExample" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_collection_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_collection_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_collection_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDoExample">
    delete from t_collection_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_collection_record (create_time, creator, creator_id, 
      modify_time, modifier, modifier_id, 
      customer_name, phone, `status`, 
      status_name, record, repayment_date, 
      repayment_period, record_name, record_phone, 
      record_relation, record_relation_name, order_number, 
      electric_man_id, electric_man_name)
    values (#{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{modifierId,jdbcType=INTEGER}, 
      #{customerName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{statusName,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}, #{repaymentDate,jdbcType=VARCHAR}, 
      #{repaymentPeriod,jdbcType=VARCHAR}, #{recordName,jdbcType=VARCHAR}, #{recordPhone,jdbcType=VARCHAR}, 
      #{recordRelation,jdbcType=VARCHAR}, #{recordRelationName,jdbcType=VARCHAR}, #{orderNumber,jdbcType=VARCHAR}, 
      #{electricManId,jdbcType=BIGINT}, #{electricManName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_collection_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="statusName != null">
        status_name,
      </if>
      <if test="record != null">
        record,
      </if>
      <if test="repaymentDate != null">
        repayment_date,
      </if>
      <if test="repaymentPeriod != null">
        repayment_period,
      </if>
      <if test="recordName != null">
        record_name,
      </if>
      <if test="recordPhone != null">
        record_phone,
      </if>
      <if test="recordRelation != null">
        record_relation,
      </if>
      <if test="recordRelationName != null">
        record_relation_name,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="electricManId != null">
        electric_man_id,
      </if>
      <if test="electricManName != null">
        electric_man_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="statusName != null">
        #{statusName,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        #{record,jdbcType=VARCHAR},
      </if>
      <if test="repaymentDate != null">
        #{repaymentDate,jdbcType=VARCHAR},
      </if>
      <if test="repaymentPeriod != null">
        #{repaymentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="recordName != null">
        #{recordName,jdbcType=VARCHAR},
      </if>
      <if test="recordPhone != null">
        #{recordPhone,jdbcType=VARCHAR},
      </if>
      <if test="recordRelation != null">
        #{recordRelation,jdbcType=VARCHAR},
      </if>
      <if test="recordRelationName != null">
        #{recordRelationName,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="electricManId != null">
        #{electricManId,jdbcType=BIGINT},
      </if>
      <if test="electricManName != null">
        #{electricManName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDoExample" resultType="java.lang.Long">
    select count(*) from t_collection_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_collection_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.modifierId != null">
        modifier_id = #{record.modifierId,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.statusName != null">
        status_name = #{record.statusName,jdbcType=VARCHAR},
      </if>
      <if test="record.record != null">
        record = #{record.record,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentDate != null">
        repayment_date = #{record.repaymentDate,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentPeriod != null">
        repayment_period = #{record.repaymentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.recordName != null">
        record_name = #{record.recordName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordPhone != null">
        record_phone = #{record.recordPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.recordRelation != null">
        record_relation = #{record.recordRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.recordRelationName != null">
        record_relation_name = #{record.recordRelationName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.electricManId != null">
        electric_man_id = #{record.electricManId,jdbcType=BIGINT},
      </if>
      <if test="record.electricManName != null">
        electric_man_name = #{record.electricManName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_collection_record
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      modifier_id = #{record.modifierId,jdbcType=INTEGER},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      status_name = #{record.statusName,jdbcType=VARCHAR},
      record = #{record.record,jdbcType=VARCHAR},
      repayment_date = #{record.repaymentDate,jdbcType=VARCHAR},
      repayment_period = #{record.repaymentPeriod,jdbcType=VARCHAR},
      record_name = #{record.recordName,jdbcType=VARCHAR},
      record_phone = #{record.recordPhone,jdbcType=VARCHAR},
      record_relation = #{record.recordRelation,jdbcType=VARCHAR},
      record_relation_name = #{record.recordRelationName,jdbcType=VARCHAR},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      electric_man_id = #{record.electricManId,jdbcType=BIGINT},
      electric_man_name = #{record.electricManName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDo">
    update t_collection_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="statusName != null">
        status_name = #{statusName,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        record = #{record,jdbcType=VARCHAR},
      </if>
      <if test="repaymentDate != null">
        repayment_date = #{repaymentDate,jdbcType=VARCHAR},
      </if>
      <if test="repaymentPeriod != null">
        repayment_period = #{repaymentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="recordName != null">
        record_name = #{recordName,jdbcType=VARCHAR},
      </if>
      <if test="recordPhone != null">
        record_phone = #{recordPhone,jdbcType=VARCHAR},
      </if>
      <if test="recordRelation != null">
        record_relation = #{recordRelation,jdbcType=VARCHAR},
      </if>
      <if test="recordRelationName != null">
        record_relation_name = #{recordRelationName,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="electricManId != null">
        electric_man_id = #{electricManId,jdbcType=BIGINT},
      </if>
      <if test="electricManName != null">
        electric_man_name = #{electricManName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chexin.simple.development.demo.model.CollectionRecordDo">
    update t_collection_record
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      modifier_id = #{modifierId,jdbcType=INTEGER},
      customer_name = #{customerName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      status_name = #{statusName,jdbcType=VARCHAR},
      record = #{record,jdbcType=VARCHAR},
      repayment_date = #{repaymentDate,jdbcType=VARCHAR},
      repayment_period = #{repaymentPeriod,jdbcType=VARCHAR},
      record_name = #{recordName,jdbcType=VARCHAR},
      record_phone = #{recordPhone,jdbcType=VARCHAR},
      record_relation = #{recordRelation,jdbcType=VARCHAR},
      record_relation_name = #{recordRelationName,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      electric_man_id = #{electricManId,jdbcType=BIGINT},
      electric_man_name = #{electricManName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>